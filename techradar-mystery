#!/usr/bin/env ruby
require 'csv'
require 'set'

APP_NAME = File.basename $0
def show_wait_cursor(seconds,fps=10)
  chars = %w[| / - \\]
  delay = 1.0/fps
  (seconds*fps).round.times{ |i|
    print chars[i % chars.length]
    sleep delay
    print "\b"
  }
end

USAGE = "#{APP_NAME} : csv_file number_of_speakers"

def abort_with_message msg = USAGE
  puts msg
  exit
end

abort_with_message if ARGV.length < 2

number_of_talks = ARGV[1].to_i
abort_with_message if number_of_talks == 0

data = CSV.read(ARGV[0])
data.first << "Status"
data[1..-1].map! { |item| item[3] = "âœ˜".center(6) }

def out(*cols, header:false)
  puts '-' * 93 if header
  puts "| %12s | %-50s | %-12s | %5s |" % cols
  puts '-' * 93 if header
end

presenters = Set.new
out *data.first, header: true
signed_up = data[1..-1].map do |row|
  if row[2].nil?
    nil
  else
    out *row
    presenters << (row[2])
    row
  end
end.compact

puts '-' * 93

abort_with_message("Only #{presenters.size} presenters available. Cannot choose #{number_of_talks}") if presenters.length < number_of_talks

puts 'Selected'.center(93, '-')
selected = []
until selected.length == number_of_talks do
  show_wait_cursor(1.3)
  item = signed_up.sample
  next if selected.find{|chosen| chosen[2] == item[2]}
  selected << item
  out *item
end
puts '-' * 93
